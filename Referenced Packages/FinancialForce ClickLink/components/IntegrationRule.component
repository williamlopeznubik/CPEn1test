<apex:component access="global" controller="ffirule.IntegrationRuleComponentController">
    <apex:attribute name="engine" access="global" description="Instance of the ClickLink engine" type="ffirule.IntegrationRuleEngine" />
    <apex:attribute name="actionName" access="global" description="ClickLink action name" type="String" assignTo="{!ActionNameValue}"/>
    <apex:attribute name="sourceId" access="global" description="ClickLink source object id" type="Id" assignTo="{!SourceObjectId}"/>
    <apex:form >
        <apex:pageMessages escape="false"/>

        <apex:commandButton value="Back" action="{!engine.cancel}" rendered="{!renderBackButton}"/>

        <apex:outputPanel rendered="{!renderAction}">
			<!--Include Stylsheets for the Mobile look and feel -->
			<apex:stylesheet value="{!URLFOR($Resource.Mobile_Design_Templates,
				'Mobile-Design-Templates-master/common/css/app.min.css')}"/>
			<apex:includeScript value="{!URLFOR($Resource.Mobile_Design_Templates,
				'Mobile-Design-Templates-master/common/js/jQuery2.0.2.min.js')}"/>
			<apex:includeScript value="{!URLFOR($Resource.Mobile_Design_Templates,
				'Mobile-Design-Templates-master/common/js/jquery.touchwipe.min.js')}"/>
			<apex:includeScript value="{!URLFOR($Resource.Mobile_Design_Templates,
				'Mobile-Design-Templates-master/common/js/main.min.js')}"/>

			<apex:stylesheet value="{!URLFOR($Resource.bootstrap_dist,
				'dist/css/bootstrap.min.css')}"/>

			<style>
		        .requiredInput .requiredBlock, .requiredBlock {background-color: white;}
		        .custompubblock div {display: inline-block;}
		        .custompublabel {width:54px;}
		    </style>
		    <style>
			    div#sharingError
			    {
					border-bottom-width: 1px;
					border-bottom-style: solid;
					border-color: #cfd4d9;
					background-color: #e8eaeb;
					max-width:300px;
					margin: 14px auto;
					display:none;
				}
				div#sharingError > div.sharingErrorHeader
				{
					display: table;
					width: 100%;
				}
				div#sharingError > div.sharingErrorHeader > div.errorIconContainer
				{
					padding-left: 14px;
					padding-right: 14px;
					display: table-cell;
					vertical-align: middle;
				}
				div#sharingError > div.sharingErrorHeader > div.errorIconContainer > span.errorIcon
				{
					background-image: url("{!URLFOR($Resource.bootstrap_dist,'dist/icons/standard/error-icon.png')}");
					background-position: 50%;
					background-repeat: no-repeat;
					background-size: 100%;
					display: block;
					vertical-align: middle;
					height: 16px;
					width: 16px;
				}
				div#sharingError > div.sharingErrorHeader > div.errorTitleContainer
				{
					width: 100%;
					display: table-cell;
					vertical-align: middle;
				}
				div#sharingError > div.sharingErrorHeader > div.errorTitleContainer > h1.errorTitle
				{
					margin-top: 14px;
					margin-bottom: 12px;
					font-size: 14px;
					color: #3c3d3e;
					margin: 0.67em 0;
				}
				div#sharingError > p.errorDescription
				{
					margin-top: 0;
					margin-left: 14px;
					margin-right: 14px;
					font-size: 12px;
					color: #3c3d3e;
				}
				div#sharingError > p#errorMessages
				{
					margin-top: 0;
					margin-left: 14px;
					margin-right: 14px;
					font-size: 12px;
					color: #3c3d3e;
				}
		    </style>

			<script type='text/javascript' src='/canvas/sdk/js/29.0/publisher.js'></script>

			<script text='text/javascript'>

				function sfOne()
				{
					return ((typeof sforce != 'undefined') && (sforce != null));
				}

				function runClickLinkRule() {
					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.IntegrationRuleComponentController.runRule}',
						'{!SourceObjectId}',
						'{!ActionNameValue}',
						function(result, event){
							if(event.status) {
								if (sfOne()) {
									Sfdc.canvas.publisher.publish({name: "publisher.close", payload:{ refresh:"true"}});
									//sforce.one.navigateToSObject(result);
								}
								else {
									Sfdc.canvas.publisher.publish({name: "publisher.refresh", payload:{ feed:"true"}});
								}
							} else if (event.type === 'exception') {
								handleFeedbackCreateResult(event);
								console.log(result);
							}
						},
						{escape: true}
					);
				}

				function handleFeedbackCreateResult(event)
				{
					$('#sharingError').show();
					$('#errorMessages').html(event.message);
				}

				var previousOnload = window.onload;

				window.onload = function() {
					if (previousOnload) {
						previousOnload();
					}

					if (sfOne())
					{
						document.getElementById('submitbutton').style.visibility = 'hidden';
					}
				}

				try {
					Sfdc.canvas.publisher.publish({name: "publisher.setValidForSubmit", payload:"true"});

					Sfdc.canvas.publisher.subscribe({name: "publisher.post",
						onData:function(e) {
							runClickLinkRule();
						}
					});
				}
				catch(e) {
					console.log(e.statusText);
				}
			</script>

			<!-- Following SF1 style. https://sfdc-styleguide.herokuapp.com/?id=components#Page-LevelErrors -->
			<div id="sharingError">
    			<div class="sharingErrorHeader">

    				<div class="errorIconContainer">
    					<span class="errorIcon"/>
   					</div>
   					<div class="errorTitleContainer">
   						<h1 class="errorTitle">
   							<apex:outputText value="{!$Label.PublisherActionErrorTitle}"/>
   						</h1>
   					</div>
    			</div>
    			<p class="errorDescription">
    				<apex:outputText value="{!$Label.PublisherActionErrorDescription}"/>
				</p>
				<p id="errorMessages"></p>
    		</div>

			<div class="panel panel-default">
				<div class="panel-footer">
					<h5 class="panel-title">{!ActionMessage}</h5>
				</div>
				<button type="button" class="btn btn-sm btn-success" style="position:fixed; bottom:10px; right:10px;" id="submitbutton" onclick="runClickLinkRule();">Submit</button>
			</div>

        </apex:outputPanel>

    </apex:form>
</apex:component>