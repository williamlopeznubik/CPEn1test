<!-- User Note: TF0000000000000XLS Reporting Data Capture Template. Use This Template To Ensure You Capture All Of The Data Required When Building A New Report Definition. -->
<!-- User Note: The Template Is Designed To Show Display All The Data In A Report Definition To A User To Ensure The Correct Information Is Being Queried -->
<!-- User Note: This Template Should Be Used By Default On Any New Reports Being Created And For Any Tests Being Performed Against Existing Report Definitions -->
<!-- User Note: Special Features: Labels Are Not Shown On This Template. -->
<!-- REGION 01: GENERAL CONFIGURATION START-->
<!-- User Note: I Want To Use The Reporting Engine To Generate Reports -->
<apex:page standardController="ffr__ReportingDefinition__c" extensions="ffr.ReportingTemplateController" readOnly="true" contenttype="application/vnd.ms-excel">
<!-- User Note: I Want To Have A Single Format For All Of My Reports So That I Can Style The Fonts And Colors -->
<!-- User Note: A Standard Stylesheet Has Been Provided In The Static Resources -->
<!-- User Note: You Can Create Your Own Stylsheet In The Static Resources And Apply It To Your Reports -->
<!-- User Note: The Style Has Been Designed To Allow Variations Within Different Types Of Reports -->
<!-- User Note: Change The Last Character From D To S On The Style Classes Applied To Each Line Will Produce A Summary Report -->
<!-- User Note: A Summary Report Hides The Lowest Level Of Rows But Retains Calculations -->
<apex:stylesheet value="{!URLFOR($Resource.ffr__ReportingDefaultStyles, 'ReportingDefaultStyles.css')}"/>
<apex:stylesheet value="{!StyleSheetName}"/>
<!-- User Note: I Want To Format Values On A Report In Different Ways -->
<!-- User Note: A Number Formatter Component Has Been Provided To Support Different Formats -->
<!-- User Note: The Coding Structure For The Variable Is As Follows Value/Percent Numberofdecimals Normal/Reversed Brakets/Minus 3Charcterinternationalcurrencycode/None-->
<!-- User Note: Good Practice Is To Reverse Values Using A Format Rather Than Create Calculations On The Visualforce Page So Running Totals Can Be Easily Maintained-->
<!-- User Note: You Can Add Your Own Formats To The List Below Try To Keep A Good Coding Structure-->
<apex:variable var="dateFormat" value="{0, date, MM/dd/yyyy}"/>
<apex:variable var="V2NCB" value="{0, number, #,###,###,##0.00;(#,###,###,##0.00)}"/>
<apex:variable var="P2NCB" value="{0, number, #,###,###,##0.00%;(#,###,###,##0.00%)}"/>
<apex:variable var="V0NCB" value="{0, number, #,###,###,##0;(#,###,###,##0)}"/>
<apex:variable var="P0NCB" value="{0, number, #,###,###,##0%;(#,###,###,##0%)}"/>
<apex:variable var="V2RCB" value="{0, number, (#,###,###,##0.00);#,###,###,##0.00}"/>
<apex:variable var="P2RCB" value="{0, number, (#,###,###,##0.00%);#,###,###,##0.00%}"/>
<apex:variable var="V0RCB" value="{0, number, (#,###,###,##0);#,###,###,##0}"/>
<apex:variable var="P0RCB" value="{0, number, (#,###,###,##0%);#,###,###,##0%}"/>
<apex:variable var="V2NCBUSD" value="{0, number, $#,###,###,##0.00;$(#,###,###,##0.00)}"/>
<apex:variable var="V2RCBUSD" value="{0, number, $(#,###,###,##0.00);$#,###,###,##0.00}"/>
<apex:variable var="VZ" value="0.00"/>
<apex:variable var="PZ" value="0.00%"/>
<apex:variable var="VZUSD" value="$0.00"/>
<apex:variable var="VZ0" value="0"/>
<!-- User Note: I Want To Change All Of The Value Formats Quickly Across The Whole Of The Report -->
<!-- User Note: Having The Variables Above Assigned To A Second Variable Here Means That Just Changing This Field Will -->
<!-- User Note: Apply The Results To All The Fields Where It Is Used -->
<!-- User Note: It Is Possible To Use Individual Variables Against A Line This Method Allows You To Make A Single Change To All Related Formats -->
<apex:variable var="VN" value="{!V2NCB}"/>
<apex:variable var="PN" value="{!P2NCB}"/>
<apex:variable var="VR" value="{!V2RCB}"/>
<apex:variable var="PR" value="{!P2RCB}"/>
<!-- REGION 01: GENERAL CONFIGURATION START-->
<!-- REGION 02: REPORT HEADER START -->
<!-- Demand The Report Definition Fields To Be Loaded Even If Data Is Not Found -->
<apex:outputText value="{!ffr__ReportingDefinition__c.Name}" rendered="false"/>
<apex:outputText value="{!ffr__ReportingDefinition__c.ffr__Description__c}" rendered="false"/>
<apex:outputText value="{!ffr__ReportingDefinition__c.ffr__Title__c}" rendered="false"/>
<apex:outputText value="{!ffr__ReportingDefinition__c.ffr__DisplayPrompts__c}" rendered="false"/>
<apex:outputText value="{!ffr__ReportingDefinition__c.ffr__ReportingTemplate__c}" rendered="false"/>
<apex:outputText value="{!ffr__ReportingDefinition__c.ffr__StyleSheet__c}" rendered="false"/>
<apex:outputText value="{!ffr__ReportingDefinition__c.ffr__PrintStyleSheet__c}" rendered="false"/>
<!-- User Note: Show The Error Messages From The Reporting Engine -->
<apex:outputpanel title="Messages" rendered="{!hasMessages}">
	<apex:outputText value="Messages"/>
	<apex:messages />
</apex:outputpanel>
<!-- User Note: I Want A Consistent Header Format To All Of My Reports With Titles Descriptions And Runtime Prompts Etc -->
<!-- User Note: When Creating New Templates This Well Formatted Header Should Be Copied And Used Across All The Reports -->
<table class="ffrgridd">
	<tr><td class="ffrgridtitleleftd">{!NOW()}</td></tr>
	<tr><td class="ffrgridtitleleftd">{!ffr__ReportingDefinition__c.ffr__Title__c}</td></tr>
	<tr><td class="ffrgridtitleleftd">{!ffr__ReportingDefinition__c.Name}</td></tr>
	<tr><td class="ffrgridtitleleftd">{!ffr__ReportingDefinition__c.ffr__Description__c}</td></tr>
</table>
<!-- User Note: Create a new table to display the prompt information -->
<table class="ffrgridnotfullpage">
	<tr>
		<td align="left">
				<table class="ffrgrid">
				<apex:repeat value="{!promptList}" var="prompt" >
				<tr>
					<td align="left">{!prompt.label}</td>
					<td align="left"><strong>{!prompt.value}</strong></td>
				</tr>
				</apex:repeat>
				</table>
		</td>
	</tr>
</table>
<!-- User Note: Insert a space after the header -->
<table class="ffrgrid">
</table>
<!-- REGION 02: REPORT HEADER END -->
<!-- REGION 03: REPORT BODY-->
<!-- User Note: Iterate Over All Of The Data Ranges, Groups And Rows And Return The Data -->
<!-- User Note: Display The Report Definition > Data Range > Name Label-->
<apex:outputpanel rendered="{!!hasMessages}">
	<apex:repeat value="{!reportingDataKeyList}" var="reportingDataKey">
		<apex:variable var="dataRange" value="{!reportingData[reportingDataKey]}"/>
		{!reportingDataRanges[reportingDataKey].Name}
		
	<!-- SUMMARY DATA RANGES-->	
		<apex:outputpanel rendered="{!dataRange.TypeName == SummaryType}">
			<table class="ffrgrid">
				<apex:repeat value="{!dataRange.rowList}" var="row" >
					<tr>
	<!-- User Note: Display The Report Definition > Data Range > Filter Mapping (Rows)Labels-->
						<td class="ffrgridtitleleftd">{!row.label}</td>
					</tr>
					<tr>
	<!-- User Note: Display The Report Definition > Data Range > Reporting Values (GroupBy) Labels-->
						<apex:repeat value="{!dataRange.groupLabelList}" var="groupLabel">
							<th class="ffrgridtitlerightd">{!groupLabel}</th>
						</apex:repeat>
						<th class="ffrgridspacer"></th>
	<!-- User Note: Display The Report Definition > Data Range > Filter Mapping (Column) Labels And The Related Values Labels-->
						<apex:repeat value="{!dataRange.columnLabelList}" var="columnLabel">
							<apex:repeat value="{!dataRange.valueLabelList}" var="valueLabel">
								<th class="ffrgridtitlerightd">{!columnLabel}<br/>{!valueLabel}</th>
							</apex:repeat>
							<apex:repeat value="{!dataRange.countLabelList}" var="countLabel">
								<th class="ffrgridtitlerightd">{!columnLabel}<br/>{!countLabel}</th>
							</apex:repeat>
						</apex:repeat>
					</tr>
					<apex:repeat value="{!row.lineList}" var="line" >
						<tr>
	<!-- User Note: Display The Report Definition > Data Range > Values(Group) Actual Data -->
							<apex:repeat value="{!line.genericGroupList}" var="group" >
								<td class="ffrgridrowlabeld">
									<apex:outputText value="{!dateFormat}" rendered="{!IF((group.Type =='DATE' || group.Type =='DATETIME'),true,false)}">
	                                    <apex:param value="{!group.Value}"/>
	                                </apex:outputText>
	                                <apex:outputText value="{!group.Value}" rendered="{!IF((group.Type =='DATE' || group.Type =='DATETIME'),false,true)}" />
								</td>
							</apex:repeat>
							<td class="ffrgridspacerd"/>
							<apex:repeat value="{!line.columnList}" var="column">
								<apex:repeat value="{!column.valueList}" var="value">
									<td class="ffrgridrowd">
	<!-- User Note: Display The Report Definition Values(Sum) Actual Data -->
										{!value}
									</td>
								</apex:repeat>
								<apex:repeat value="{!column.countList}" var="value">
									<td class="ffrgridrowd">
	<!-- User Note: Display The Report Definition Values(Count) Actual Data -->
										{!value}
									</td>
								</apex:repeat>
							</apex:repeat>
						</tr>
					</apex:repeat>
					<tr><td class="ffrgridspacerd"></td></tr>
				</apex:repeat>
			</table>
		</apex:outputpanel>

	<!-- DETAIL DATA RANGES -->	
		<apex:outputpanel rendered="{!dataRange.TypeName == DetailType}">
			<table class="ffrgrid">
				<apex:repeat value="{!dataRange.rowList}" var="row" >
					<tr>
	<!-- User Note: Display The Report Definition > Data Range > Rows Labels-->
						<td class="ffrgridtitleleftd">{!row.label}</td>
					</tr>
					<tr>
						<th class="ffrgridspacer"></th>
						<apex:repeat value="{!dataRange.reportingValueList}" var="reportingValue">
	<!-- User Note: Display The Report Definition > Data Range > Column Labels-->
							<th class="ffrgridtitlerightd">{!reportingValue.label}</th>
						</apex:repeat>
					</tr>
					<apex:repeat value="{!row.lineList}" var="line" >
						<tr>
							<td class="ffrgridspacerd"/>
							<apex:repeat value="{!dataRange.reportingValueList}" var="reportingValue">
								<td class="ffrgridrowd">
	<!-- User Note: Display The Report Definition > Data Range > Actual Data -->
									<apex:outputText value="{!dateFormat}" rendered="{!IF((reportingValue.Type =='DATE' || reportingValue.Type =='DATETIME'),true,false)}">
	                                    <apex:param value="{!line.values[reportingValue.key]}"/>
	                                </apex:outputText>
	                                <apex:outputText value="{!line.values[reportingValue.key]}" rendered="{!IF((reportingValue.Type =='DATE' || reportingValue.Type =='DATETIME'),false,true)}" /> 
								</td>
							</apex:repeat>
						</tr>
					</apex:repeat>
					<tr><td class="ffrgridspacerd"></td></tr>
				</apex:repeat>
			</table>
		</apex:outputpanel>
	</apex:repeat>
</apex:outputpanel>
<!-- REGION 03: REPORT BODY END -->
</apex:page>